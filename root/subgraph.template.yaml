specVersion: 0.0.2
description: Indexes checkpoints and new deposits on root chain
repository: https://github.com/maticnetwork/subgraphs
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Rootchain
    network: {{ network }}
    source:
      address: "{{contracts.rootChain.address}}"
      abi: Rootchain
      startBlock: {{ contracts.rootChain.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - NewHeaderBlock
      abis:
        - name: Rootchain
          file: ./abis/Rootchain.json
      eventHandlers:
        - event: NewHeaderBlock(indexed address,indexed uint256,indexed uint256,uint256,uint256,bytes32)
          handler: handleNewHeaderBlock
      file: ./src/mappings/checkpoint.ts

  - kind: ethereum/contract
    name: WithdrawManager
    network: {{ network }}
    source:
      address: "{{contracts.withdrawManager.address}}"
      abi: WithdrawManager
      startBlock: {{ contracts.withdrawManager.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ExitStarted
        - ExitCancelled
        - Withdraw
      abis:
        - name: WithdrawManager
          file: ./abis/WithdrawManager.json
      eventHandlers:
        - event: ExitStarted(indexed address,indexed uint256,indexed address,uint256,bool)
          handler: handleExitStarted
        - event: ExitCancelled(indexed uint256)
          handler: handleExitCancelled
        - event: Withdraw(indexed uint256,indexed address,indexed address,uint256)
          handler: handleWithdraw
      file: ./src/mappings/withdrawManager.ts
  
  - kind: ethereum/contract
    name: RootChainManager
    network: {{ network }}
    source:
      address: "{{contracts.rootChainManager.address}}"
      abi: RootChainManager
      startBlock: {{ contracts.rootChainManager.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - PredicateRegistered
        - TokenMapped
      abis:
        - name: RootChainManager
          file: ./abis/RootChainManager.json
      eventHandlers:
        - event: PredicateRegistered(indexed bytes32,indexed address)
          handler: handlePredicateRegistered
        - event: TokenMapped(indexed address,indexed address,indexed bytes32)
          handler: handleTokenMapped
      file: ./src/mappings/rootChainManager.ts

  - kind: ethereum/contract
    name: StateSender
    network: {{ network }}
    source:
      address: "{{contracts.stateSender.address}}"
      abi: StateSender
      startBlock: {{ contracts.stateSender.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - StateSync
        - StateRegistration
      abis:
        - name: StateSender
          file: ./abis/StateSender.json
      eventHandlers:
        - event: StateSynced(indexed uint256,indexed address,bytes)
          handler: handleStateSynced
        - event: NewRegistration(indexed address,indexed address,indexed address)
          handler: handleNewRegistration
        - event: RegistrationUpdated(indexed address,indexed address,indexed address)
          handler: handleRegistrationUpdated
      file: ./src/mappings/state-sync.ts

# StakingInfo contract's event handlers not being added intentionally
# because they don't seem to work as they're supposed to be working
#
# More investigation required in that front
