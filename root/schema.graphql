type Checkpoint @entity {
  id: ID!
  proposer: Bytes!
  headerBlockId: BigInt!
  checkpointNumber: BigInt!
  reward: BigInt!
  start: BigInt!
  end: BigInt!
  root: Bytes!
}

type StateSync @entity {
  id: ID!
  stateId: BigInt!
  contract: Bytes!
  data: Bytes!
  timestamp: BigInt!
}

type StateRegistration @entity {
  id: ID!
  user: Bytes!
  receiver: Bytes!
  sender: Bytes!
}

type PlasmaExitStarted @entity {
  id: ID!,
  exitor: Bytes!,
  exitId: BigInt!,
  token: Bytes!,
  amount: BigInt!,
  isRegularExit: Boolean!
}

type PlasmaExitCancelled @entity {
  id: ID!,
  exitId: BigInt!
}

type PlasmaExitUpdated @entity {
  id: ID!,
  exitId: BigInt!,
  age: BigInt!,
  signer: Bytes!
}

type PlasmaExitCompleted @entity {
  id: ID!,
  exitId: BigInt!,
  user: Bytes!,
  token: Bytes!,
  amount: BigInt!
}
