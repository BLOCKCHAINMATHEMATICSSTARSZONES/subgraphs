type Checkpoint @entity {
  id: ID!
  proposer: Bytes!
  headerBlockId: BigInt!
  checkpointNumber: BigInt!
  reward: BigInt!
  start: BigInt!
  end: BigInt!
  root: Bytes!
}

type StateSync @entity {
  id: ID!
  stateId: BigInt!
  contract: Bytes!
  data: Bytes!
  timestamp: BigInt!
}

type StateRegistration @entity {
  id: ID!
  user: Bytes!
  receiver: Bytes!
  sender: Bytes!
}

# This entity will hold everything regarding 
type PlasmaExit @entity {
  # id always created using `plasma-exit-${exitId}`
  id: ID!,
  exitId: BigInt!,
  exitInitiator: Bytes!,
  exitCompleter: Bytes,
  token: Bytes!,
  amount: BigInt!,
  isRegularExit: Boolean!,
  exited: Int!,
  # exited can take 3 possible values
  # 0 -> exit started
  # 1 -> exit cancelled
  # 2 -> exit completed
  exitStartedTxHash: Bytes!,
  exitCancelledTxHash: Bytes,
  exitCompletedTxHash: Bytes
}
